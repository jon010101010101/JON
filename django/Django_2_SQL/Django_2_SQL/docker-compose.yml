services:
  db:
    image: postgres:13
    container_name: postgres_container
    environment:
      POSTGRES_DB: d42               # Nombre de la base de datos
      POSTGRES_USER: djangouser      # Usuario de PostgreSQL
      POSTGRES_PASSWORD: secret      # Contraseña del usuario
      POSTGRES_HOST_AUTH_METHOD: trust # Solo para desarrollo (no usar en producción)
    ports:
      - "5432:5432"                  # Exponer el puerto 5432 para PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volumen persistente para los datos
    networks:
      - django-network               # Red compartida con el servicio web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U djangouser -d d42"]
      interval: 5s                   # Intervalo entre verificaciones
      timeout: 10s                   # Tiempo máximo para cada verificación (aumentado)
      retries: 10                    # Número máximo de intentos (aumentado)

  web:
    build: .
    container_name: django_container
    command: ["sh", "-c", "./wait_for_db.sh && python manage.py runserver 0.0.0.0:8000"]  # Ajuste para ejecutar ambos comandos correctamente
    volumes:
      - .:/code                      # Montar el código fuente en el contenedor
    ports:
      - "8000:8000"                  # Exponer el puerto 8000 para Django
    depends_on:
      db:
        condition: service_healthy   # Esperar a que la base de datos esté saludable antes de iniciar web
    environment:
      DJANGO_SETTINGS_MODULE: d42.settings  # Configuración de Django
      POSTGRES_DB: d42               # Nombre de la base de datos (mismo que en db)
      POSTGRES_USER: djangouser      # Usuario de PostgreSQL (mismo que en db)
      POSTGRES_PASSWORD: secret      # Contraseña del usuario (mismo que en db)
      POSTGRES_HOST: db              # Host de PostgreSQL (nombre del servicio db)
      POSTGRES_PORT: 5432            # Puerto de PostgreSQL (mismo que en db)
    networks:
      - django-network               # Red compartida con el servicio db

volumes:
  postgres_data: {}                  # Volumen persistente para los datos de PostgreSQL

networks:
  django-network:
    driver: bridge                   # Red tipo bridge para comunicación entre contenedores
